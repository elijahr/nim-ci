name: Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build_amd64:
    name: Build ${{ matrix.nim_host_os }}_amd64
    runs-on: ${{ matrix.builder }}

    strategy:
      matrix:
        include:
          - nim_host_os: linux # Match nim's system.hostOS values
            builder: ubuntu-latest
            nim_version: devel
          - nim_host_os: macosx # Match nim's system.hostOS values
            builder: macos-latest
            nim_version: devel
          - nim_host_os: windows # Match nim's system.hostOS values
            builder: windows-latest
            nim_version: devel

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: build-${{ runner.os }}

      - name: Install & build
        id: build
        env:
          # Put env vars shared across all matrices here
          NIM_VERSION: ${{ matrix.nim_version }}
          NIM_CI_VERSION: github-workflows # or vX.Y.Z to lock to a specific nim-ci version
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/elijahr/nim-ci/${NIM_CI_VERSION}/nim-ci.sh -LsSf > nim-ci.sh
          source nim-ci.sh

          all_the_things

      - name: Upload packages
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v2
        with:
          path: ${{ steps.build.outputs.ZIP_PATH }}

  # Build for Linux aarch64, ppc64le, etc
  build_linux_other_archs:
    name: Build ${{ matrix.nim_host_os }}_${{ matrix.nim_host_cpu }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - nim_host_os: linux # Match nim's system.hostCPU values
            nim_host_cpu: arm64 # Match nim's system.hostOS values
            nim_version: stable # The version of Nim to test with
            arch: aarch64 # For run-on-arch-action

          # - nim_host_os: linux
          #   nim_host_cpu: powerpc64el
          #   arch: ppc64le
          #   nim_version: stable

    steps:
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.choosenim-linux_${{ matrix.arch }}
            ~/.nimble-linux_${{ matrix.arch }}
          key: build_other_archs_linux_${{ matrix.arch }}

      - uses: actions/checkout@v2.1.0

      # Use run-on-arch-action to emulate the CPU architecture.
      # See https://github.com/elijahr/run-on-arch-action for docs.
      - name: Build
        id: build
        uses: elijahr/run-on-arch-action@v2.0.0
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu18.04

          githubToken: ${{ github.token }}

          # Put env vars shared across all matrices here
          env: | # Pipe is important
            NIM_VERSION: ${{ matrix.nim_version }}
            NIM_CI_VERSION: github-workflows

          # Create cached directories
          setup: |
            mkdir -p ~/.choosenim-${{ matrix.arch }}
            mkdir -p ~/.nimble-${{ matrix.arch }}

          # Mount cached directories in the container for faster builds
          dockerRunArgs: |
            -v /home/runner/.choosenim-linux_${{ matrix.arch }}:/root/.choosenim
            -v /home/runner/.nimble-linux_${{ matrix.arch }}:/root/.nimble

          run: |
            apt-get update -q
            apt-get install -q -y build-essential git curl bash

            curl https://raw.githubusercontent.com/elijahr/nim-ci/${NIM_CI_VERSION}/nim-ci.sh -LsSf > nim-ci.sh
            source nim-ci.sh

            all_the_things

      # - name: Upload zipball
      #   if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: ${{ steps.build.outputs.ZIP_PATH }}
