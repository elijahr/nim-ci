name: Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  # Build for amd64
  build:
    name: Build ${{ matrix.os }} amd64
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ ubuntu-latest ]
        nim_version: [ devel ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: ${{ runner.os }}

      - name: Install & build
        env:
          NIM_VERSION: ${{ matrix.nim_version }}
          CPU_ARCH: amd64
          OS_NAME: ${{ matrix.os }}
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/nim-ci.sh -LsSf > nim-ci.sh
          source nim-ci.sh

          # If this nim project is a library, install it.
          # If this nim project exports executables, build them.
          build_nim_project

          # If this nim project exports executables, zip them.
          # No-op for NIM_PROJECT_TYPE==library projects.
          make_artifact

          # Run unit tests
          cd "$NIM_PROJECT_DIR"
          nimble test
          cd -

      - name: Upload binary artifact for amd64
        uses: actions/upload-artifact@v2
        with:
          path: |
            dist/*.tar.xz
            dist/*.zip
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}

  # Build for Linux aarch64 (arm64), ppc64le, etc
  build-linux-other-archs:
    name: Build linux ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        nim_version: [ stable ]
        arch: [aarch64] #, ppc64le]

    steps:
      # Use the run-on-arch-action action to run a docker emulating the
      # requested CPU architecture.
      # See https://github.com/uraimo/run-on-arch-action for docs.
      - name: Build ${{ matrix.arch }}
        id: build_arch
        uses: uraimo/run-on-arch-action@v1.1.0
        with:
          architecture: ${{ matrix.arch }}
          distribution: buster
          run: |
            # Install system packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -q
            apt-get install -q -y build-essential git curl bash

            # Checkout repo
            ref=`basename $GITHUB_REF`
            git clone -b $ref --single-branch "https://github.com/${GITHUB_REPOSITORY}.git" repo

            cd repo

            # Setup vars for nim-ci.sh
            export \
              NIM_VERSION=${{ matrix.nim_version }} \
              CPU_ARCH=${{ matrix.arch }} \
              OS_NAME=linux \

            curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/nim-ci.sh -LsSf > nim-ci.sh
            source nim-ci.sh

            # If this nim project is a library, install it.
            # If this nim project exports executables, build them.
            build_nim_project

            # If this nim project exports executables, zip them.
            # No-op for NIM_PROJECT_TYPE==library projects.
            make_artifact

            # Run unit tests
            cd "$NIM_PROJECT_DIR"
            nimble test

      - name: Upload binary artifact for ${{ matrix.arch }}
        uses: actions/upload-artifact@v2
        with:
          path: |
            repo/dist/*.tar.xz
            repo/dist/*.zip
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}
