name: Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    name: Build ${{ matrix.os }} amd64
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ ubuntu-latest ]
        nim_version: [ devel ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install nim
        shell: bash
        env:
          NIM_VERSION: ${{ matrix.nim_version }}
          CPU_ARCH: amd64
          OS_NAME: ${{ matrix.os }}

        run: |
          curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/scripts/install_nim.sh -LsSf -o install_nim.sh
          source install_nim.sh

      - name: Install & build
        run: |
          nimble install -y -d

      - name: Build binary
        run: |
          nimble build

      - name: Run tests
        run: nimble test

      # - name: Upload binaries for ${{ matrix.arch }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: |
      #       bin/*
      #   if: ${{ github.event_name == "tags" }}

  build-linux-other-archs:
    name: Build ubuntu-latest ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        nim_version: [ devel ]
        arch: [aarch64] #, ppc64le]

    steps:
      - name: Build ${{ matrix.arch }}
        id: build_arch
        uses: uraimo/run-on-arch-action@v1.1.0
        with:
          architecture: ${{ matrix.arch }}
          distribution: ubuntu18.04
          run: |
            curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/scripts/run_ubuntu.sh -LsSf -o run_ubuntu.sh
            source run_ubuntu.sh

      - name: Reconstruct binary
        run: |
          if [[ ! -z "${{ steps.build_arch.outputs.binary_name }}" ]]
          then
            cat << EOF > ${{ steps.build_arch.outputs.binary_name }}_${{ matrix.arch }}
            ${{ steps.build_arch.outputs.binary }}
            EOF
            chmod +x ${{ steps.build_arch.outputs.binary_name }}_${{ matrix.arch }}
            ./${{ steps.build_arch.outputs.binary_name }}_${{ matrix.arch }}
          fi

      # - name: Upload binaries for arm64
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: |
      #       bin/*
      #   if: ${{ github.event_name == "tags" }}
