name: Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    name: Build ${{ matrix.os }} amd64
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ ubuntu-latest ]
        nim_version: [ devel ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install nim
        shell: bash
        env:
          NIM_VERSION: ${{ matrix.nim_version }}
          CPU_ARCH: amd64
          OS_NAME: ${{ matrix.os }}

        run: |
          curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/install_nim.sh -LsSf -o install_nim.sh
          source install_nim.sh

      - name: Install dependencies
        run: nimble install -y -d

      - name: Build binary
        run: nimble build

      - name: Run tests
        run: nimble test


      # - name: Upload binaries for ${{ matrix.arch }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: |
      #       bin/*
      #   if: ${{ github.event_name == "tags" }}

  build-linux-arm64:
    name: Build ubuntu-latest arm64
    runs-on: ubuntu-latest

    strategy:
      matrix:
        nim_version: [ devel ]

    steps:
      - name: Build arm64
        id: build_arm64
        uses: uraimo/run-on-arch-action@v1.1.0
        with:
          architecture: aarch64
          # TODO - use alpine, its smaller?
          distribution: ubuntu18.04
          run: |
            set -ex
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -q
            apt-get install -q -y build-essential git curl

            # Checkout repo
            git clone -b $GITHUB_REF --single-branch "{$GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git" repo
            cd repo

            # Install nim
            export NIM_VERSION=${{ matrix.nim_version }}
            export CPU_ARCH=arm64
            export OS_NAME=linux
            curl https://raw.githubusercontent.com/elijahr/nim-ci/github-workflows/install_nim.sh -LsSf -o install_nim.sh
            source install_nim.sh

            # Install dependencies
            nimble install -y -d

            # Build binary
            nimble build

            # Run tests
            nimble test

            # Export binary contents as variable
            echo ::set-output name=binary::$(cat bin/example)

      - name: Reconstruct binaries
        run: |
          cat << EOF > example_arm64
          ${{ steps.build_arm64.outputs.binary }}
          EOF
          chmod +x example_arm64
          ./example_arm64

      # - name: Upload binaries for arm64
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: |
      #       bin/*
      #   if: ${{ github.event_name == "tags" }}
