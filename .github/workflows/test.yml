name: Test

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  # test_amd64:
  #   name: Test ${{ matrix.builder }} x86_64
  #   runs-on: ${{ matrix.builder }}

  #   strategy:
  #     matrix:
  #       include:
  #         - builder: ubuntu-18.04
  #         - builder: macos-latest
  #         - builder: windows-latest

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
  #         submodules: recursive

  #     - name: Setup cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cache
  #         key: test_${{ matrix.builder }}_x86_64

  #     - name: Run tests
  #       id: test
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #         NIM_CI_TEST_FULL_CLEAN: yes
  #       run: |
  #         bash ./tests/run.sh

  # Build for Linux aarch64, ppc64le, etc
  test_linux_other_archs:
    name: Test ubuntu-18.04 ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: aarch64
            distcc_hosts: distcc-host:3632
          # - arch: ppc64le
          #   distcc_hosts: distcc-host:3633

    steps:
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2.1.0

      # - name: Setup cache
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cache
      #       ~/.ccache
      #     key: test_ubuntu-18.04_${{ matrix.arch }}

      - name: Start distcc
        run: |
          PACKAGE_REGISTRY=docker.pkg.github.com/elijahr/distcc-multi-arch
          docker pull $PACKAGE_REGISTRY/distcc-host:latest
          docker-compose up -d distcc-host

      - name: Run tests
        id: test
        uses: elijahr/run-on-arch-action@container-name
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          env: |
            DISTCC_HOSTS: ${{ matrix.distcc_hosts }}
            GITHUB_TOKEN: ${{ github.token }}
            NIM_CI_TEST_FULL_CLEAN: yes

          # Create cached/volume directories on host
          # setup: |
          #   mkdir -p ~/.cache

          # Mount cached directories in the container for faster builds
          # dockerRunArgs: |
          #   --volume "${HOME}/.cache:/root/.cache"

          install: |
            apt-get update -q -y
            apt-get install git curl build-essential distcc -q -y
            apt-get clean

            # Put distcc client wrappers first in PATH
            echo "export PATH=/usr/lib/distcc:$PATH" >> ~/.bashrc

            # distcc provides gcc and g++ wrappers, but not cc, so create an additional symlink
            ln -s /usr/bin/distcc /usr/lib/distcc/cc

          run: |
            bash ./tests/run.sh

      # - name: Fix cache permissions
      #   run: |
      #     chmod -R 777 ~/.cache
      #     chown -R $(whoami) ~/.cache
      #     chmod -R 777 ~/.ccache
      #     chown -R $(whoami) ~/.ccache
